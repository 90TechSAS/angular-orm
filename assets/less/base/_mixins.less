// ==========================================================================
// Base â€“ Mixins
// ==========================================================================

.font-size (@size) {
  @remValue: @size / 16;
  @pxValue: (@size);
  font-size: ~"@{pxValue}px"; 
  font-size: ~"@{remValue}rem";
}


.box-shadow (@string) {
  -webkit-box-shadow: @string;
  -moz-box-shadow:    @string;
  box-shadow:         @string;
}

.width-calc(@dim){
   width: calc(@dim);
   width: -moz-calc(@dim);
   width: -webkit-calc(@dim);
   width: -o-calc(@dim);
}
.background-opacity(@color, @opacity) {
    @rgba-color: rgba(red(@color), green(@color), blue(@color), @opacity);

    background-color: @rgba-color;

    // Hack for IE8:
    background: none\9; // Only IE8
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d')", argb(@rgba-color),argb(@rgba-color))); // IE9 and down
    // Problem: Filter gets applied twice in IE9.
    // Solution:
    &:not([dummy]) {
      filter: progid:DXImageTransform.Microsoft.gradient(enabled='false'); // Only IE9
    }
}

.border-top-left-radius (@radius : 10px) {
  -webkit-border-top-left-radius: @radius;
  -moz-border-top-left-radius:    @radius;
  border-top-left-radius:         @radius;
}

.border-radius (@radius : 3px) {
  -webkit-border-radius: @radius;
  -moz-border-radius:    @radius;
  border-radius:         @radius;
}

.cover () {
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
}

.rotate (@rotate) {
  -ms-transform: rotate(~"@{rotate}deg");
  -webkit-transform: rotate(~"@{rotate}deg");
  transform: rotate(~"@{rotate}deg");
}

.transform (@translate) {
  -ms-transform: @translate;
  -webkit-transform: @translate;
  transform: @translate;
}

// Example  .svg-bg("img/banner.svg", "img/banner.png", 50%, 50%, no-repeat);
.bg-svg(@svg, @png, @x: 0, @y: 0, @repeat: no-repeat) {
  background: url(@svg) @x @y @repeat;
  .no-svg & {
    background: url(@png) @x @y @repeat;
  }
}

.bg-rgba (@color,@alpha) {
  @rgba: rgba(red(@color), green(@color), blue(@color), @alpha);
  @argb: argb(@rgba);
  background-color: @color;
  background-color: @rgba;
  filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr=@{argb}, endColorstr=@{argb})";
  -ms-filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr=@{argb}, endColorstr=@{argb})";
}

.opacity (@percentOpacity: 50%) {
  @opacity: unit(@percentOpacity) / 100;
  -webkit-opacity: @opacity;
  -moz-opacity: @opacity;
  opacity: @opacity;
}

.animate (@duration: 1s) {
  -webkit-animation-duration: @duration;
  animation-duration: @duration;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.animate-name (@animation: fadeInLeft) {
  -webkit-animation-name: @animation;
  -moz-animation-name: @animation;
  animation-name: @animation;
}

.animation (@animation) {
  -webkit-animation: @animation;
  -moz-animation: @animation;
  animation: @animation;
}

.animate-delay (@delay: 1s) {
  -webkit-animation-delay: @delay;
  animation-delay: @delay;
}

.transition (@speed: 0.3s) {
  -webkit-transition: all @speed;
   -moz-transition: all @speed;
   transition: all @speed;
}

.transition-delay (@speed: 0.3s) {
  -webkit-transition-delay: @speed;
  -moz-transition-delay: @speed;
  transition-delay: @speed;
}

